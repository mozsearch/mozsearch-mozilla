#!/usr/bin/env bash

set -x # Show commands
set -eu # Errors/undefined vars are fatal
set -o pipefail # Check all commands in a pipeline

date

echo Downloading NSPR
# We used to have a hand-built tar file at nss-nspr.tar.  This included
# pre-configured byproducts and pre-built byproducts that made building NSS
# brittle.  The tarball never gets automatically updated, so there's also
# potential for desynchronization versus NSS>
#
# On asuth's machine which is not in an AWS data-center, checking NSPR out from
# hg only takes 4 seconds wall-time, So now we just check the thing out from hg.
# So, if you're seeing this comment, we abandoned the tarball for now.
pushd $INDEX_ROOT
if [ -d "nspr" ]
then
    echo "Found pre-existing nspr folder; skipping re-download."
else
    hg clone https://hg.mozilla.org/projects/nspr
fi
popd

date

echo Downloading NSS
pushd $INDEX_ROOT
if [ -d "git" ]
then
    echo "Found pre-existing git folder; skipping re-download."
else
    wget -nv https://s3-us-west-2.amazonaws.com/searchfox.repositories/nss.tar
    tar xf nss.tar
    rm nss.tar
fi
popd

date

echo Downloading NSS blame
pushd $INDEX_ROOT
if [ -d "blame" ]
then
    echo "Found pre-existing blame folder; skipping re-download."
else
    wget -nv https://s3-us-west-2.amazonaws.com/searchfox.repositories/nss-blame.tar
    tar xf nss-blame.tar
    rm nss-blame.tar
fi
popd

date

echo Updating NSS git
pushd $GIT_ROOT
git pull
git config remote.cinnabar.url || git remote add cinnabar hg::https://hg.mozilla.org/projects/nss
git config cinnabar.graft true
git remote update cinnabar
popd

date

echo Generating blame information
$MOZSEARCH_PATH/tools/target/release/build-blame $GIT_ROOT $BLAME_ROOT

date
